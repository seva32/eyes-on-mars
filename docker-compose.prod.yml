services:
  postgres:
    image: postgres:16
    container_name: '${POSTGRES_HOST_PROD}'
    restart: always
    env_file:
      - .env.production
    environment:
      POSTGRES_USER: '${POSTGRES_USER}'
      POSTGRES_PASSWORD: '${POSTGRES_PASSWORD}'
      POSTGRES_DB: '${POSTGRES_DB}'
    ports:
      - '5433:5432'
    volumes:
      - postgres_data_prod:/var/lib/postgresql/data
      - ./docker/postgres/pg_hba.conf:/etc/postgresql/pg_hba.conf:ro
    command: postgres -c hba_file=/etc/postgresql/pg_hba.conf
    healthcheck:
      test: ['CMD', 'pg_isready', '-U', 'user_nemo']
      interval: 5s
      timeout: 5s
      retries: 5
    networks:
      - mars_network_prod

  nextjs:
    build:
      context: .
      dockerfile: Dockerfile.prod
    container_name: mars_project_nextjs_prod
    restart: always
    ports:
      - '3003:3003'
    depends_on:
      - postgres
    env_file:
      - .env.production
    networks:
      - mars_network_prod
    volumes:
      - .:/app
      - /app/node_modules
      - /app/.next

networks:
  mars_network_prod:
    driver: bridge

volumes:
  postgres_data_prod:
    driver: local
